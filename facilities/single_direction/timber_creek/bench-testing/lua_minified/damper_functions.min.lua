local a='movedfrom'function initDamper(b)local c={}c["prev_error"]=0;c["int_error"]=0;c["control"]=0;_G['DAMPER_'..b]=c end;function updateDamperAverage(d,b)local e='zone'..d;local f='damper'..b;if reg[e..'control']==1 and reg[e..'avgtimer']==0 then if ioAppearsValid(f..'position')then local g=tonumber(SETTINGS["DataLoggingRate"])if g<5 then g=5 end;local h=g/5;updateAverage(e..'avgdamper',io[f..'position'],h)reg[e..'avgtimer']=300 end end end;function updateDamperPIDValues(i,j,k,l)if j~=j then j=k end;if k==0 then k=j end;if l==nil then l=tonumber(SETTINGS["MinDamperValue"])end;local m=100-tonumber(j)/tonumber(k)*100;local n;local o;local p;local q;local r=getNumericSetting('DamperDerivativeTime',10)i["int_error"]=tonumber(i["int_error"])+m*r;if i["int_error"]<0 then i["int_error"]=0 end;if i["int_error"]>100-l then i["int_error"]=100-l end;n=(m-tonumber(i["prev_error"]))/r;o=tonumber(SETTINGS["DamperGain"])*m;p=tonumber(SETTINGS["DamperIntegral"])*i["int_error"]q=tonumber(SETTINGS["DamperDerivative"])*n;local s=o+p+q;digits=10^2;s=math.floor(s*digits+0.5)/digits;i["control"]=s;if i["control"]<0 then i["control"]=0 end;if i["control"]>100-l then i["control"]=100-l end;i["control"]=100-i["control"]i["prev_error"]=m end;function damperControl(c,b,t,k,u)if u==nil then u=b end;if reg['damper'..b..'override']==1 then c['control']=reg['damper'..b..'value']elseif reg['zone'..u..'control']==1 then if t>0 then updateDamperPIDValues(c,t,k)end else c['control']=0 end;io['damper'..b..'position']=c['control']end;function initZone(d)local v={}v["temp_in_alarm"]=0;v["email_sent"]=0;_G['ZONE_'..d]=v end;function setFileName(v,e)local w=''local x=dbOpen("zone_startup.db",'zonestartup')if x~=nil then w=getZoneState(x,e..'batch')w=w:gsub('[%s]','-')w=w:gsub('_','-')w=w:gsub('[%c]','')end;dbClose(x,'zonestartup')v["file_name"]=string.format("%02d_%02d_%02d_%02d%02d%02d",nowTime.month,nowTime.mday,nowTime.year,nowTime.hour,nowTime.min,nowTime.sec).."_"..w..".csv"if w==''then w=v["file_name"]end;local y=dbOpen("batch_files.db",'batchfiles')if y~=nil then if tableRowExists(y,"batch_files",v["file_name"])==false then insertTableRow(y,'batch_files',{v["file_name"],w})end end;dbClose(y,'batchfiles')if x and y then local z=file.open(batch_logs_path..v["file_name"],"w")if z~=nil then local A="Date/Time"A=A..", ".."Zone"for B,C in ipairs(ZONE_LOG_COLUMNS)do A=A..", "..C end;z:write(A.." \n")z:close()reg[e.."reset"]=0 end else reg[e..'reset']=1 end end;function printData(D,E,d,F)local z=file.open(batch_logs_path..D,"a")if z~=nil then nowTime=time.getComponents(time.now())local G=string.format("%02d/%02d/%02d %02d:%02d:%02d",nowTime.month,nowTime.mday,nowTime.year,nowTime.hour,nowTime.min,nowTime.sec)local A=G;if ZONE_LABELS~=nil then A=A..", "..ZONE_LABELS[d]else A=A..", "..tonumber(d)end;for B,H in ipairs(E)do A=A..", "..H end;z:write(A.."\n")z:close()if reg["zone"..d..'pfrptime']~=nil then updateEPATempAverages(d,F)end end end;function moveZoneBatch(I,J,K)reg[K.."control"]=0;local L=""..reg[K.."moveto"]if#L==1 then L="0"..reg[K.."moveto"]end;local M='zone'..L;if reg[M.."control"]==0 then if reg[K.."regime"]~=nil then reg[M.."regime"]=reg[K.."regime"]reg[M.."regtimer"]=reg[K.."regtimer"]end;if reg[K.."pfrptime"]~=nil then reg[M.."pfrptime"]=reg[K.."pfrptime"]end;if reg[M.."movedfrom"]~=nil then reg[M.."movedfrom"]=J end;_G['ZONE_'..L]["file_name"]=I["file_name"]I["file_name"]=""table.insert(UPDATE_ZONE_STARTUP_LATER,L)reg[K.."moveto"]=0;reg[M.."reset"]=0 end end;function updateZone(v,d,F)local N=false;local O=SETTINGS["DataLoggingRate"]*60;local e="zone"..d;local P=reg[e..a]if reg[e.."moveto"]~=nil and reg[e.."moveto"]<0 then reg[e.."moveto"]=0;v["file_name"]=""reg[e.."control"]=0;N=true elseif reg[e.."moveto"]~=nil and reg[e.."moveto"]>0 then moveZoneBatch(v,d,e)N=true elseif reg[e.."control"]==1 then local Q=reg['loadzone'..d..'active']if Q~=nil and Q~=0 then reg['loadzone'..d..'active']=0 end;nowTime=time.getComponents(time.now())if reg[e.."reset"]==1 or v["file_name"]==""then if reg[e.."pfrptime"]~=nil then reg[e.."pfrptime"]=0 end;if SETTINGS["Regime1Duration"]then reg[e.."regime"]=1;reg[e.."regtimer"]=SETTINGS["Regime1Duration"]*24*60*60 end;setFileName(v,e)N=true elseif P~=nil and P>0 then reg[e..a]=0;N=true elseif reg[e.."print"]==0 then local R=zoneLogValues(d,F)if R then reg[e..'print']=O;printData(v["file_name"],R,d,F)end;N=true elseif reg[e.."print"]>O then reg[e..'print']=O;N=true end;local S=reg[e.."regime"]regimeProgression(d)if S~=reg[e.."regime"]then N=true end else reg[e..'print']=O;if P~=nil and tonumber(P)>0 then local T=""..P;if#T<2 then T="0"..T end;if reg["zone"..T.."moveto"]~=nil then local U=""..reg["zone"..T.."moveto"]if#U<2 then U="0"..U end;if U~=d then reg[e..a]=0 end end end end;local V=300;local W=reg[e..'print']%V;if N or W>=V-10 then updateZoneStartup(v,d)end end;function regimeProgression(d)local e="zone"..d;if SETTINGS["Regime1Duration"]then if reg[e.."regtimer"]==0 and reg[e..'regime']<3 then reg[e..'regime']=reg[e..'regime']+1;if reg[e..'regime']==2 then reg[e..'regtimer']=SETTINGS["Regime2Duration"]*24*60*60 end end elseif SETTINGS["Zone"..d.."RegimeType"]~=nil then if SETTINGS["Zone"..d.."RegimeType"]=="warmup"then reg[e..'regime']=1 elseif SETTINGS["Zone"..d.."RegimeType"]=="pfrp"then if reg[e.."pfrptime"]<4320 then reg[e..'regime']=2 else reg[e..'regime']=3 end end end end;function updateDuctPressureAverage(X,Y)local Z="duct"..X;updateAverage(Z.."pressureavg",io[Z.."pressure"],Y)end;function processWirelessSensorAge(_,a0)local a1=responseIndexOf(_,"snid=")if a1~=nil and a1>0 then a1=a1+_+6;local a2=responseSubstr(a1,a1+16)local a3=responseIndexOf(a1,"<Age>")+a1;if a3~=nil and a1>0 then local a4=responseIndexOf(a3,"</Age>")+a3;local a5=responseSubstr(a3+5,a4)a0[a2]=tonumber(a5)processWirelessSensorAge(a4,a0)end end end;function processWirelessSensorData(_,a0)local a1=responseIndexOf(_,"ptid=")if a1~=nil and a1>0 then a1=a1+_+6;local a6=responseSubstr(a1,a1+18)local a3=responseIndexOf(a1,"<Value>")+a1;if a3~=nil and a1>0 then local a4=responseIndexOf(a3,"</Value>")+a3;local a5=responseSubstr(a3+7,a4)a0[a6]=tonumber(a5)processWirelessSensorData(a4,a0)end end end;function retrieveWirelessSensorData()local a7=httpRequest("http://"..SETTINGS["WirelessBaseStationIP"].."/xmldata",2500)local a0={}if a7~=nil and a7>0 then processWirelessSensorData(0,a0)processWirelessSensorAge(0,a0)end;return a0 end;function zonesOnline(a8)local a9=0;for B,u in ipairs(a8)do if reg['zone'..u..'control']==1 then a9=a9+1 end end;return a9 end;function ioAppearsValid(aa)return io[aa]~=nil and io[aa]==io[aa]end;function getNumericSetting(ab,ac)if SETTINGS[ab]~=nil then return tonumber(SETTINGS[ab])elseif ac~=nil then return tonumber(ac)else return 0 end end;function sendInitAlarm()emailDef={rcpt="grp.admin",subj="WebMACS Restarted",body="The WebMACS system has restarted and is running the initialization sequence."}email(emailDef)end;function sendAlarm(ad,ae)local af=SETTINGS['FacilityName']emailDef={rcpt="grp.admin",subj=af..[[: Alarm raised on ]]..ad..[[!]],body=af..[[: An alarm was raised on ]]..ad..[[.  The reading is: ]]..ae..[[.]]}email(emailDef)end;if not luatest_running then while init_complete~=true do sleep(1000)end;while init_complete do sleep(SETTINGS['DamperRate']*1000)updateAlarms()updateDampers()end end